namespace $ {
	export class $mol_view_tree2_ts_test_dictionary extends $mol_view {
		
		/**
		 * ```tree
		 * super_prop *
		 * 	str \some
		 * 	^
		 * 	str2 \some
		 * 	^ test
		 * ```
		 */
		super_prop() {
			return {
				str: "some",
				...super.super_prop(),
				str2: "some",
				...this.test()
			} as Record< string, any >
		}
		
		/**
		 * ```tree
		 * simple *
		 * 	$str \some
		 * 	n-um 12317
		 * 	bool true
		 * 	nul null
		 * 	localized @ \localized value1
		 * ```
		 */
		simple() {
			return {
				"$str": "some",
				"n-um": 12317,
				bool: true,
				nul: null as any,
				localized: this.$.$mol_locale.text( '$mol_view_tree2_ts_test_dictionary_simple_localized' )
			} as Record< string, any >
		}
		
		/**
		 * ```tree
		 * complex *
		 * 	arr /
		 * 		\test1
		 * 		\test2
		 * 	child *
		 * 		str \some
		 * 		num 12317
		 * 		bool true
		 * 		nul null
		 * 		localized @ \localized value2
		 * ```
		 */
		complex() {
			return {
				arr: [
					"test1",
					"test2"
				] as readonly any[],
				child: {
					str: "some",
					num: 12317,
					bool: true,
					nul: null as any,
					localized: this.$.$mol_locale.text( '$mol_view_tree2_ts_test_dictionary_complex_child_localized' )
				} as Record< string, any >
			} as Record< string, any >
		}
	}
	
}

